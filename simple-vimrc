" The basics
set nocompatible " be iMproved, required
filetype off " required

"Turn off annoying beep sounds
set noerrorbells visualbell t_vb=
if has('autocmd')
autocmd GUIEnter * set visualbell t_vb=
endif

" autoload files that have changed outside of vim
set autoread

" Show matching brackets when text indicator is over them
set showmatch
" " How many tenths of a second to blink when matching brackets
set mat=2

" Add a bit extra margin to the left
set foldcolumn=1

" MacVim Settings
set guifont=\Monaco:h14

filetype plugin indent on " required
" To ignore plugin indent changes, instead use: "filetype plugin on
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"" Detect filetype
filetype plugin on
" au BufRead,BufNewFile *.aspx set filetype=html

" Colours
" Enable syntax highighting
syntax enable
" 256 colors
set t_Co=256

syntax on

set background=dark

set number
" shows row and column number at bottom right corner
set ruler
set encoding=utf-8

" Filetypes
" Set relevant filetypes
" au BufRead,BufNewFile .scss set filetype=css
au BufRead,BufNewFile .md set filetype=markdown
" au BufRead,BufNewFile *.html set syntax=html

" Text, tab and indent related
" Make the command-line completion better
set wildmenu

" 2 spaces
set expandtab
set shiftwidth=2
set tabstop=2
set softtabstop=2
" Round indent to nearest multiple of 2

" tabs
"set noexpandtab
"set shiftwidth=4
"set tabstop=4
"set softtabstop=4
"set smarttab

set breakindent
set nowrap

" Moving around, tabs, windows and buffers
" Treat long lines as break lines (useful when moving around in them)
map j gj
map k gk

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Return to last edit position when opening files
autocmd BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\ exe "normal! g`\"" |
\ endif
" Remember info about open buffers on close
set viminfo^=%

" Interactions
" Start scrolling slightly before the cursor reaches an edge
set scrolloff=3
set sidescrolloff=5
" Scroll sideways a character at a time, rather than a screen at a time
set sidescroll=1
" Allow motions and back-spacing over line-endings etc
set backspace=indent,eol,start
set whichwrap=h,l,b,<,>,~,[,]
" Underscores denote words
set iskeyword-=_

" Status line
" Always show the status line
set laststatus=2
" Show what mode you are currently in
set showmode
" Show what commands you aretyping
set showcmd
" Allow modelines
set modeline
" Show current line and column position in file
set ruler
" Show file title in terminal tab
set title

" Line numbers
" Toggle relative line number
function! NumberToggle()
if(&relativenumber)
set number
else
" Uncomment the following to
" display a '0' instead of the line number
" set nonumber
set relativenumber
set number
endif
endfunc
"nnoremap <C-n> :call NumberToggle()<cr>
call NumberToggle()

" Limit line-length to 80 columns by highlighting col 81 onward
if exists("+colorcolumn")
set colorcolumn=80
endif
" Highlight current line
set cursorline
" Don't keep results highlighted after searching...
set nohlsearch
" ...just highlight as we type
set incsearch
" Ignore case when searching...
set ignorecase
" ...except if we input a capital letter
set smartcase

highlight ColorColumn ctermbg=10

" Key mappings
" jj to throw you into normal mode from insert mode
inoremap jj <esc>
" Disable arrow keys
map <up> <nop>
imap <up> <nop>
map <down> <nop>
imap <down> <nop>
map <left> <nop>
imap <left> <nop>
map <right> <nop>
imap <right> <nop>

map <leader>w <C-W>w
map <Bar> <C-W>v<C-W><Right>
map <silent> <C-b> :NERDTreeToggle<CR>
let NERDTreeHijackNetrw = 0
" Map leader
let mapleader = "\\"

" turn on text highlight in search by default
set hlsearch

" Resizing windows
nnoremap <C-up> <C-W>+
" nnoremap <C-down> <C-W>-
nnoremap <C-left> <C-W><
nnoremap <C-right> <C-W>>

" Moving around splits
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l
nnoremap <C-H> <C-W>h

" Closing windows
nnoremap <C-C>l <C-W>l:q<CR>
nnoremap <C-C>h <C-W>h:q<CR>
nnoremap <C-C>j <C-W>j:q<CR>
nnoremap <C-C>k <C-W>k:q<CR>

" Disable ex mode (Dvorak annoyance)
nnoremap Q <Nop>

" Ignore gulp files in fuzzy find
set wildignore+=.o,.obj,.git
set wildignore+=node_modules/**

" Load vimrc
nmap <Leader>ev :e $MYVIMRC<cr>
nmap <Leader>es :e ~/.vim/snippets<cr>
nmap <Leader>ww :set wrap<cr>

" Auto commands
" Automatically source vimrc after saving it
autocmd BufWritePost .vimrc source %

" Files, backups and undo
" Turn backup off
set nobackup
set nowb
set noswapfile

" Search
map <leader>n :cn<cr>
map <leader>p :cp<cr>

" Omnicompletion
set omnifunc=syntaxcomplete#Complete

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" Clipboard settings
set clipboard=unnamed

" Emmet
let g:user_emmet_leader_key=","

map <leader>s vi{:sort<cr>
map <leader>c f{V%<cr>

set spelllang=en_gb
nmap <silent> <leader>; :set spell!<CR>
nnoremap <Leader>w :w<CR>

"Prevent delay after pressing escape
:set timeout timeoutlen=700

" show characters
nnoremap <leader>. :set list!<cr>
