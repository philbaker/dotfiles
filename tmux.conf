# Set delay between prefix and command
set -s escape-time 1

# Set base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Longer history limit
set -g history-limit 10000

# Reload config with prefix r
bind r source-file ~/.tmux.conf\; display "Config reloaded"

# Ensure that we can send Ctrl-A to other apps (press C-a twice)
# bind C-a send-prefix

# Split pane and retain the current direcotry of existing pane
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Move between panes with prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection with prefix C-h and prefix C-l
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize panes
bind -r H if -F "#{@pane-is-vim}" 'send-keys H' 'resize-pane -L 3'
bind -r J if -F "#{@pane-is-vim}" 'send-keys J' 'resize-pane -D 3'
bind -r K if -F "#{@pane-is-vim}" 'send-keys K' 'resize-pane -U 3'
bind -r L if -F "#{@pane-is-vim}" 'send-keys L' 'resize-pane -R 3'

# Pane zoom
bind-key g resize-pane -Z

# Replace [ with v for copy mode
bind v copy-mode

# Go to previous session
bind-key -r h switch-client -l

# Enable mouse support
set -g mouse on

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# Set status line colors
set -g status-style fg=white,bg=black

# Set the color of the window list
setw -g window-status-style fg=cyan,bg=black

# Set colors for the active window
setw -g window-status-current-style fg=black,bg=cyan

# Set colors for pane borders
setw -g pane-border-style fg=yellow,bg=black
setw -g pane-active-border-style fg=green,bg=black

# Set colors for command / message line
set -g message-style fg=white,bold,bg=black

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
setw -g window-status-activity-style fg=black,bg=yellow

# Status line left side
set -g status-left-length 40

# Status line right side
set -g status-right "#{pane_current_path} %d %b %R"

# Enable Vi keys
setw -g mode-keys vi

# Use OSC 52 for clipboard
set -g set-clipboard on

# Use copy and paste from Vi
bind Escape copy-mode
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection
unbind p
bind p paste-buffer

# Fixes for pbcopy
# set -g default-command "reattach-to-user-namespace -l /bin/zsh"
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind -Tcopy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer"

# Set Zsh as shell
# set -g default-shell /bin/zsh

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# smart-splits.nvim 
# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
